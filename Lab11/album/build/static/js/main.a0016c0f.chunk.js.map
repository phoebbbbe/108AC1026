{"version":3,"sources":["components/Title.js","pages/NoMatch.js","firebase.js","pages/Post.js","pages/Album.js","App.js","index.js"],"names":["Title","NoMatch","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","React","Component","Copyright","react","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","PostItem","props","Grid","item","xs","sm","md","Card","sx","height","display","flexDirection","CardMedia","component","image","alt","CardContent","flexGrow","gutterBottom","post","CardActions","Button","size","Post","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPosts","db","recentPostsRef","query","ref","onValue","snapshot","newPosts","forEach","childSnapshot","childKey","key","childData","val","push","setState","posts","onlyOnce","state","date","Today","inherits","createClass","value","listPosts","map","p","ThemeProvider","CssBaseline","AppBar","position","Toolbar","PhotoCamera_default","a","mr","noWrap","Box","bgcolor","pt","pb","Container","maxWidth","paragraph","Stack","direction","spacing","justifyContent","py","container","App","react_default","createElement","className","Album_Post","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_router_dom_dist","index_es","src_App"],"mappings":"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","file":"static/js/main.a0016c0f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Title() {\n  return (\n    <nav class=\"bg-dark navbar-dark navbar\">\n      <div className=\"row col-12 d-flex justify-content-center text-white\">\n        <h3>Welcom to NTUT Web Programming</h3>\n      </div>\n    </nav>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2> Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to home page</Link>\n      </p>\n    </div>\n  );\n}\nexport default NoMatch;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport { getDatabase } from \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAEUyKTf2EmzwqjCYkQoYw5wrZ56ksH20w\",\n  authDomain: \"ntut-web-by-108ac1026-001.firebaseapp.com\",\n  databaseURL:\n    \"https://ntut-web-by-108ac1026-001-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"ntut-web-by-108ac1026-001\",\n  storageBucket: \"ntut-web-by-108ac1026-001.appspot.com\",\n  messagingSenderId: \"986757797850\",\n  appId: \"1:986757797850:web:5502e14f61fb05c7f012e3\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const database = getDatabase(app);\n","import React, { useState } from \"react\";\nimport { database } from \"../firebase\";\nimport {\n  ref,\n  push,\n  child,\n  update,\n  query,\n  onValue,\n  getDatabase,\n} from \"firebase/database\";\n\nfunction ListItem(props) {\n  return <li>{props.post}</li>;\n}\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      posts: [],\n    };\n  }\n\n  /* TODO: finish this method */\n  getPosts = () => {\n    const db = getDatabase();\n    const recentPostsRef = query(\n      ref(db, \"posts\")\n    ); /* TODO: use the query() method */\n    onValue(\n      recentPostsRef,\n      (snapshot) => {\n        let newPosts = [];\n        snapshot.forEach((childSnapshot) => {\n          // console.log(childSnapshot);\n          const childKey = childSnapshot.key;\n          const childData = childSnapshot.child(\"post\").val();\n          newPosts.push((childKey, childData));\n          /* TODO: parse the childSnapshot and use newPosts.push() to store the key and the post pair. You can use console.log() first to see what childSnapshot looks like. */\n        });\n\n        // Save the newPosts to the state var.\n        this.setState({ posts: newPosts });\n      },\n      {\n        // We only need to fetch once\n        onlyOnce: true,\n      }\n    );\n  };\n\n  componentDidMount() {\n    /* TODO: call the method to get posts */\n    this.getPosts();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name == \"post\") {\n      this.state.post = value;\n    }\n  };\n\n  handleSubmit = (e) => {\n    let obj = {\n      post: this.state.post,\n    };\n    // Create a unique key for new posts\n    const newPostKey = push(child(ref(database), \"posts\")).key;\n    const updates = {};\n    updates[\"/posts/\" + newPostKey] = obj;\n    update(ref(database), updates);\n\n    /* TODO: call the method to get the posts */\n    var posts = this.getPosts();\n    this.render();\n    e.preventDefault();\n  };\n\n  render() {\n    const listPosts = this.state.posts.map((post) => <li>{post}</li>);\n    /* TODO: convert this.state.posts into a list of <ListItem>. Remember to set the key and the post props */\n\n    return (\n      <div>\n        <ul>{listPosts}</ul>\n        <h2>Submit your post!</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            New post:\n            <input name=\"post\" onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Post!\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Button from \"@mui/material/Button\";\nimport CameraIcon from \"@mui/icons-material/PhotoCamera\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { database } from \"../firebase\";\n\nimport {\n  getDatabase,\n  ref,\n  push,\n  child,\n  update,\n  query,\n  limitToLast,\n  onValue,\n} from \"firebase/database\";\nimport { Today } from \"@mui/icons-material\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nfunction PostItem(props) {\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <CardMedia\n          component=\"img\"\n          image=\"https://source.unsplash.com/random\"\n          alt=\"random\"\n        />\n        <CardContent sx={{ flexGrow: 1 }}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.post}\n          </Typography>\n          <Typography>{props.post}</Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\">View</Button>\n          <Button size=\"small\">Edit</Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      date: new Date(Today),\n    };\n  }\n\n  /* TODO: finish this method */\n  getPosts = () => {\n    const db = getDatabase();\n    // const auth = getAuth();\n    // const myUserId = auth.currentUser.uid;\n    const recentPostsRef = query(\n      ref(db, \"posts\")\n    ); /* TODO: use the query() method */\n    onValue(\n      recentPostsRef,\n      (snapshot) => {\n        let newPosts = [];\n        snapshot.forEach((childSnapshot) => {\n          // console.log(childSnapshot);\n          // const key = childSnapshot.key;\n          const childKey = childSnapshot.key;\n          const childData = childSnapshot.val().post;\n          // console.log(childKey, childData);\n          newPosts.push({ childKey, childData });\n          /* TODO: parse the childSnapshot and use newPosts.push() to store the key and the post pair. You can use console.log() first to see what childSnapshot looks like. */\n        });\n\n        // Save the newPosts to the state var.\n        this.setState({ posts: newPosts });\n      },\n      {\n        // We only need to fetch once\n        onlyOnce: true,\n      }\n    );\n  };\n\n  componentDidMount() {\n    /* TODO: call the method to get posts */\n    this.getPosts();\n  }\n\n  render() {\n    const listPosts = this.state.posts.map((p) => (\n      <PostItem key={p.childKey} post={p.childData} />\n    ));\n    /* TODO: convert this.state.posts into a list of <ListItem>. Remember to set the key and the post props */\n    return (\n      // <div>\n      //     <ul>\n      //         {listPosts}\n      //     </ul>\n      //     <h2>Submit your post!</h2>\n      //     <form onSubmit={this.handleSubmit}>\n      //         <label>\n      //             New post:\n      //             <input name=\"post\" onChange={this.handleChange} />\n      //         </label>\n      //         <input type=\"submit\" value=\"Post!\" />\n      //     </form>\n      // </div>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <CameraIcon sx={{ mr: 2 }} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Posts layout\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          {/* Hero unit */}\n          <Box\n            sx={{\n              bgcolor: \"background.paper\",\n              pt: 8,\n              pb: 6,\n            }}\n          >\n            <Container maxWidth=\"sm\">\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Posts layout\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"text.secondary\"\n                paragraph\n              >\n                See below all the Picture with text we posts.\n              </Typography>\n              <Stack\n                sx={{ pt: 4 }}\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"center\"\n              >\n                {/* <Button variant=\"contained\">Main call to action</Button>\n                <Button variant=\"outlined\">Secondary action</Button> */}\n              </Stack>\n            </Container>\n          </Box>\n          <Container sx={{ py: 8 }} maxWidth=\"md\">\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {listPosts}\n            </Grid>\n          </Container>\n        </main>\n\n        {/* Footer */}\n        <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component=\"footer\">\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Footer\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            align=\"center\"\n            color=\"text.secondary\"\n            component=\"p\"\n          >\n            Something here to give the footer a purpose!\n          </Typography>\n          <Copyright />\n        </Box>\n        {/* End footer */}\n      </ThemeProvider>\n    );\n  }\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Post from \"./pages/Post\";\nimport Album from \"./pages/Album\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Album />\n      {/* <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Home />} />\n          <Route path=\"search\" element={<Search />} />\n          <Route path=\"post\" element={<Post />} />\n          <Route path=\"*\" element={<NoMatch />} />\n        </Route>\n      </Routes> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ProSidebarProvider } from \"react-pro-sidebar\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ProSidebarProvider>\n        <App />\n      </ProSidebarProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}